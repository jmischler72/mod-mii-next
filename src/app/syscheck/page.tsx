'use client';

import { SyscheckFileUploadForm } from '@/components/syscheck-file-upload-form';
import { useState } from 'react';
import { UploadSyscheckData, UploadSyscheckResult } from '@/types/upload-syscheck-type';
import { Button } from '@/components/ui/button';
import { Archive, Info, HelpCircle, Download, Upload } from 'lucide-react';
import Link from 'next/link';
import {
	Dialog,
	DialogContent,
	DialogDescription,
	DialogHeader,
	DialogTitle,
	DialogTrigger,
} from '@/components/ui/dialog';

export default function SyscheckPage() {
	const [uploadMessage, setUploadMessage] = useState<string>('');
	const [uploadData, setUploadData] = useState<UploadSyscheckData | null>(null);
	const [isCreatingArchive, setIsCreatingArchive] = useState<boolean>(false);
	const [isInstructionsOpen, setIsInstructionsOpen] = useState<boolean>(false);
	const [isWadInstructionsOpen, setIsWadInstructionsOpen] = useState<boolean>(false);

	const handleUploadSuccess = (result: UploadSyscheckResult) => {
		setUploadMessage(result.message || 'File uploaded successfully!');
		setUploadData(result.data || null);
		console.log('Upload successful:', result);
	};

	const handleUploadError = (error: string) => {
		setUploadMessage(`Error: ${error}`);
		setUploadData(null);
		console.error('Upload error:', error);
	};

	const handleDownloadArchive = async () => {
		if (!uploadData?.wadsInfos) {
			setUploadMessage('No files available for archive');
			return;
		}

		console.log('Creating archive with files:', uploadData.wadsInfos);
		setIsCreatingArchive(true);
		try {
			const response = await fetch('/api/wads/create-archive', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({
					wadnames: uploadData.wadsInfos.filter((file) => file.wadname !== undefined).map((file) => file.wadId),
				}),
			});

			if (!response.ok) {
				const errorData = await response.json();
				throw new Error(errorData.error || 'Failed to create archive');
			}

			// Extract download summary from response headers
			const downloadSummaryHeader = response.headers.get('X-Download-Summary');
			let summaryMessage = 'Archive downloaded successfully!';

			if (downloadSummaryHeader) {
				try {
					const summary = JSON.parse(downloadSummaryHeader);
					const totalFiles = summary.totalRequested;

					summaryMessage = `✅ Archive downloaded successfully!

📊 Download Summary:
• Total files requested: ${totalFiles}
• Downloaded: ${summary.downloaded} files
• Downloaded from S3: ${summary.cached} files
• Failed: ${summary.failed} files`;

					if (summary.failedFiles && summary.failedFiles.length > 0) {
						summaryMessage += `

❌ Failed files:
${summary.failedFiles.map((file: string) => `• ${file}`).join('\n')}`;
					}
				} catch (error) {
					console.error('Failed to parse download summary:', error);
				}
			}

			const blob = await response.blob();
			const url = window.URL.createObjectURL(blob);
			const a = document.createElement('a');
			a.href = url;
			a.download = 'wad-files.zip';
			document.body.appendChild(a);
			a.click();
			window.URL.revokeObjectURL(url);
			document.body.removeChild(a);

			setUploadMessage(summaryMessage);
		} catch (error) {
			console.error('Archive error:', error);
			setUploadMessage(`Error creating archive: ${error}`);
		} finally {
			setIsCreatingArchive(false);
		}
	};

	return (
		<div className='min-h-screen bg-black p-4 font-sans sm:p-6'>
			<main className='mx-auto max-w-6xl'>
				<div className='mb-8'>
					<h1 className='mb-4 text-3xl font-bold text-white'>Syscheck Analysis</h1>
					<div className='mb-6 flex flex-col sm:flex-row sm:items-center sm:justify-between'>
						<p className='mb-4 text-gray-300 sm:mb-0'>
							Upload your <span className='font-semibold'>syscheck.csv</span> file generated by the{' '}
							<Link
								href='https://wii.hacks.guide/syscheck.html'
								className='text-blue-400 underline hover:text-blue-300'
							>
								SysCheck Updater homebrew app
							</Link>{' '}
							on your Wii. This tool will analyze your console&apos;s configuration and provide you with a ZIP file
							containing all the necessary WAD files for your system.
						</p>

						<Dialog open={isInstructionsOpen} onOpenChange={setIsInstructionsOpen}>
							<DialogTrigger asChild>
								<Button variant='outline' className='flex shrink-0 items-center gap-2'>
									<HelpCircle className='h-4 w-4' />
									How to Generate Syscheck
								</Button>
							</DialogTrigger>
							<DialogContent className='max-h-[90vh] max-w-4xl overflow-y-auto'>
								<DialogHeader>
									<DialogTitle className='flex items-center gap-2'>
										<Info className='h-5 w-5 text-blue-400' />
										How to Generate a Syscheck File
									</DialogTitle>
									<DialogDescription>
										Follow these steps to create a syscheck.csv file on your Wii console.
									</DialogDescription>
								</DialogHeader>

								<div className='space-y-6 text-gray-300'>
									<div>
										<h3 className='mb-3 text-lg font-medium text-white'>Prerequisites</h3>
										<ul className='ml-4 list-inside list-disc space-y-2'>
											<li>A modded Wii console with the Homebrew Channel installed</li>
											<li>An SD card or USB drive</li>
											<li>Internet connection (optional, for easier download)</li>
										</ul>
									</div>

									<div>
										<h3 className='mb-3 text-lg font-medium text-white'>Installation Steps</h3>
										<ol className='ml-4 list-inside list-decimal space-y-3'>
											<li>
												<strong className='text-white'>Download SysCheck Updater:</strong>
												<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
													<li>
														Visit the{' '}
														<Link
															href='https://wii.hacks.guide/syscheck.html'
															className='text-blue-400 underline hover:text-blue-300'
														>
															official SysCheck guide
														</Link>{' '}
														or download directly from{' '}
														<Link
															href='https://oscwii.org/library/app/SysCheckME'
															className='text-blue-400 underline hover:text-blue-300'
														>
															oscwii.org
														</Link>
													</li>
													<li>
														Download the latest{' '}
														<code className='rounded bg-gray-800 px-2 py-1'>SysCheck_Updater_vX.X.X.zip</code> file
													</li>
												</ul>
											</li>

											<li>
												<strong className='text-white'>Install on SD Card/USB:</strong>
												<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
													<li>Extract the downloaded ZIP file</li>
													<li>
														Copy the <code className='rounded bg-gray-800 px-2 py-1'>SysCheck_Updater</code> folder to
														the <code className='rounded bg-gray-800 px-2 py-1'>apps</code> directory on your SD card or
														USB drive
													</li>
													<li>
														Your structure should look like:{' '}
														<code className='rounded bg-gray-800 px-2 py-1'>SD:/apps/SysCheck_Updater/</code>
													</li>
												</ul>
											</li>

											<li>
												<strong className='text-white'>Run SysCheck on Your Wii:</strong>
												<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
													<li>Insert your SD card or USB drive into your Wii</li>
													<li>Launch the Homebrew Channel from your Wii Menu</li>
													<li>
														Navigate to and launch <strong>SysCheck Updater</strong>
													</li>
													<li>Follow the on-screen prompts to generate the syscheck file</li>
													<li>
														The tool will create a <code className='rounded bg-gray-800 px-2 py-1'>syscheck.csv</code>{' '}
														file on your SD card/USB drive
													</li>
												</ul>
											</li>

											<li>
												<strong className='text-white'>Upload Your File:</strong>
												<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
													<li>Remove your SD card/USB drive from the Wii</li>
													<li>Insert it into your computer</li>
													<li>
														Locate the <code className='rounded bg-gray-800 px-2 py-1'>syscheck.csv</code> file (usually
														in the root directory)
													</li>
													<li>Upload it using the form below</li>
												</ul>
											</li>
										</ol>
									</div>
								</div>
							</DialogContent>
						</Dialog>
					</div>
				</div>

				{/* Upload Form Section */}
				<div className='rounded-lg border border-gray-700 bg-gray-900 p-6'>
					<SyscheckFileUploadForm
						onUploadSuccess={handleUploadSuccess}
						onUploadError={handleUploadError}
						className='mx-auto'
					/>
				</div>

				{uploadMessage && (
					<div
						className={`mt-2 rounded-lg p-3 ${uploadMessage.startsWith('Error') ? 'bg-red-50 text-red-700' : 'bg-green-50 text-green-700'}`}
					>
						<p className='text-sm font-medium whitespace-pre-line'>{uploadMessage}</p>
					</div>
				)}

				{uploadData && (
					<div className='mt-4 grid gap-3 lg:grid-cols-2'>
						{/* Basic File Information */}
						<div className='rounded-lg bg-blue-50 p-3'>
							<h3 className='mb-2 text-sm font-semibold text-blue-900'>File Information</h3>
							<div className='space-y-1 text-xs text-blue-800'>
								<p>
									<strong>Filename:</strong> {uploadData.filename}
								</p>
								<p>
									<strong>Size:</strong> {(uploadData.size / 1024).toFixed(2)} KB
								</p>
							</div>
						</div>

						{/* System Information */}
						<div className='rounded-lg bg-green-50 p-3'>
							<h3 className='mb-2 text-sm font-semibold text-green-900'>System Information</h3>
							<div className='grid grid-cols-2 gap-1 text-xs text-green-800'>
								<p>
									<strong>Console:</strong> {uploadData.consoleType}
								</p>
								<p>
									<strong>Region:</strong> {uploadData.region}
								</p>
								<p>
									<strong>System Menu:</strong> {uploadData.systemMenuVersion}
								</p>
								<p>
									<strong>HBC:</strong> {uploadData.hbcVersion}
								</p>
								<p>
									<strong>Firmware:</strong> {uploadData.firmware.firmware}
								</p>
								<p>
									<strong>Version:</strong> {uploadData.firmware.firmwareVersion}
								</p>
							</div>
						</div>

						{/* System Status */}
						<div className='rounded-lg bg-yellow-50 p-3'>
							<h3 className='mb-2 text-sm font-semibold text-yellow-900'>System Status</h3>
							<div className='space-y-1 text-xs text-yellow-800'>
								<div className='flex items-center gap-2'>
									<span
										className={`h-2 w-2 rounded-full ${uploadData.systemChecks.isBootMiiInstalled ? 'bg-green-500' : 'bg-red-500'}`}
									></span>
									<span>BootMii: {uploadData.systemChecks.isBootMiiInstalled ? 'Installed' : 'Not Installed'}</span>
								</div>
								<div className='flex items-center gap-2'>
									<span
										className={`h-2 w-2 rounded-full ${uploadData.systemChecks.isPriiloaderInstalled ? 'bg-green-500' : 'bg-red-500'}`}
									></span>
									<span>
										Priiloader: {uploadData.systemChecks.isPriiloaderInstalled ? 'Installed' : 'Not Installed'}
									</span>
								</div>
								<div className='flex items-center gap-2'>
									<span
										className={`h-2 w-2 rounded-full ${!uploadData.systemChecks.isHbcOutdated ? 'bg-green-500' : 'bg-yellow-500'}`}
									></span>
									<span>HBC: {uploadData.systemChecks.isHbcOutdated ? 'Outdated' : 'Up to Date'}</span>
								</div>

								{uploadData.systemChecks.missingIOS.length > 0 && (
									<div className='mt-1'>
										<p className='font-medium'>Missing IOS:</p>
										<p className='text-xs'>{uploadData.systemChecks.missingIOS.join(', ')}</p>
									</div>
								)}

								{uploadData.systemChecks.outdatedD2XCios.length > 0 && (
									<div className='mt-1'>
										<p className='font-medium'>Outdated d2x cIOS:</p>
										<p className='text-xs'>{uploadData.systemChecks.outdatedD2XCios.join(', ')}</p>
									</div>
								)}
							</div>
						</div>

						{/* WAD Files */}
						{uploadData.wadsInfos && uploadData.wadsInfos.length > 0 && (
							<div className='rounded-lg bg-purple-50 p-3'>
								<div className='mb-2 flex items-center justify-between'>
									<h3 className='text-sm font-semibold text-purple-900'>
										Required WAD Files ({uploadData.wadsInfos.length})
									</h3>
									<div className='flex gap-2'>
										<Dialog open={isWadInstructionsOpen} onOpenChange={setIsWadInstructionsOpen}>
											<DialogTrigger asChild>
												<Button size='sm' variant='outline' className='flex items-center gap-1'>
													<Upload className='h-3 w-3' />
													Install Guide
												</Button>
											</DialogTrigger>
											<DialogContent className='max-h-[90vh] max-w-4xl overflow-y-auto'>
												<DialogHeader>
													<DialogTitle className='flex items-center gap-2'>
														<Upload className='h-5 w-5 text-green-400' />
														How to Install WAD Files on Your Wii
													</DialogTitle>
													<DialogDescription>
														Follow these steps to safely install the downloaded WAD files on your Wii console.
													</DialogDescription>
												</DialogHeader>

												<div className='space-y-6 text-gray-300'>
													<div className='rounded-lg border border-red-700 bg-red-900/30 p-4'>
														<h4 className='mb-2 font-medium text-red-200'>⚠️ Important Safety Notice:</h4>
														<ul className='ml-4 list-inside list-disc space-y-1 text-sm text-red-100'>
															<li>Installing WAD files can brick your Wii if done incorrectly</li>
															<li>Always install BootMii and Priiloader before installing WADs</li>
															<li>Never install WADs from untrusted sources</li>
															<li>Make sure the WADs match your console region</li>
														</ul>
													</div>

													<div>
														<h3 className='mb-3 text-lg font-medium text-white'>Prerequisites</h3>
														<ul className='ml-4 list-inside list-disc space-y-2'>
															<li>A modded Wii with Homebrew Channel installed</li>
															<li>
																BootMii installed (as boot2 or IOS) -{' '}
																<strong className='text-red-400'>CRITICAL for recovery</strong>
															</li>
															<li>
																Priiloader installed - <strong className='text-yellow-400'>Highly recommended</strong>
															</li>
															<li>A WAD manager (YAWMM, Wii Mod Lite, or similar)</li>
															<li>SD card or USB drive</li>
															<li>The downloaded ZIP file from this tool</li>
														</ul>
													</div>

													<div>
														<h3 className='mb-3 text-lg font-medium text-white'>Installation Steps</h3>
														<ol className='ml-4 list-inside list-decimal space-y-3'>
															<li>
																<strong className='text-white'>Download and Install a WAD Manager:</strong>
																<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
																	<li>
																		Download{' '}
																		<Link
																			href='https://github.com/Naim2000/YAWM-ModMii-Edition/releases'
																			className='text-blue-400 underline hover:text-blue-300'
																		>
																			YAWMM (Yet Another Wad Manager ModMii Edition)
																		</Link>{' '}
																		- Recommended
																	</li>
																	<li>
																		Extract and copy the app folder to your SD card's{' '}
																		<code className='rounded bg-gray-800 px-2 py-1'>apps</code> directory
																	</li>
																</ul>
															</li>

															<li>
																<strong className='text-white'>Prepare the WAD Files:</strong>
																<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
																	<li>Extract the downloaded ZIP file from this tool</li>
																	<li>
																		Create a folder called <code className='rounded bg-gray-800 px-2 py-1'>wad</code> in
																		the root of your SD card
																	</li>
																	<li>
																		Copy all the .wad files to the{' '}
																		<code className='rounded bg-gray-800 px-2 py-1'>wad</code> folder on your SD card
																	</li>
																	<li>
																		Structure should be:{' '}
																		<code className='rounded bg-gray-800 px-2 py-1'>SD:/wad/filename.wad</code>
																	</li>
																</ul>
															</li>

															<li>
																<strong className='text-white'>Create a NAND Backup (CRITICAL):</strong>
																<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
																	<li>Launch BootMii from the Homebrew Channel</li>
																	<li>Create a full NAND backup to your SD card</li>
																	<li>This backup can restore your Wii if something goes wrong</li>
																	<li>
																		<strong className='text-red-400'>Do NOT skip this step!</strong>
																	</li>
																</ul>
															</li>

															<li>
																<strong className='text-white'>Install WADs Using YAWMM:</strong>
																<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
																	<li>Insert your SD card into the Wii</li>
																	<li>Launch the Homebrew Channel</li>
																	<li>Launch YAWMM (Yet Another Wad Manager ModMii Edition)</li>
																	<li>
																		Navigate to the <code className='rounded bg-gray-800 px-2 py-1'>wad</code> folder
																	</li>
																	<li>Select the WAD files you want to install (use + button to select multiple)</li>
																	<li>Press A to install selected WADs</li>
																	<li>Wait for installation to complete</li>
																</ul>
															</li>

															<li>
																<strong className='text-white'>Post-Installation:</strong>
																<ul className='mt-2 ml-6 list-inside list-disc space-y-1'>
																	<li>Restart your Wii</li>
																	<li>Check that the System Menu boots properly</li>
																	<li>Verify that new channels appear if you installed any</li>
																	<li>Test the Homebrew Channel still works</li>
																</ul>
															</li>
														</ol>
													</div>

													<div className='rounded-lg border border-orange-700 bg-orange-900/30 p-4'>
														<h4 className='mb-2 font-medium text-orange-200'>🔧 Installation Order Recommendations:</h4>
														<ol className='ml-4 list-inside list-decimal space-y-1 text-sm text-orange-100'>
															<li>Install IOS files first (IOS58, IOS60, etc.)</li>
															<li>Install cIOS files (d2x-cios)</li>
															<li>Install System Menu updates last (if any)</li>
															<li>Install channels and other WADs afterward</li>
														</ol>
													</div>

													<div className='rounded-lg border border-yellow-700 bg-yellow-900/30 p-4'>
														<h4 className='mb-2 font-medium text-yellow-200'>🚨 If Something Goes Wrong:</h4>
														<ul className='ml-4 list-inside list-disc space-y-1 text-sm text-yellow-100'>
															<li>If Wii won't boot: Hold RESET while powering on to access Priiloader</li>
															<li>If Priiloader is installed: Use "Load/Install File" to reinstall System Menu</li>
															<li>If BootMii is installed as boot2: Restore NAND backup using BootMii</li>
															<li>
																Visit{' '}
																<Link
																	href='https://wii.hacks.guide/bricks'
																	className='text-blue-300 underline hover:text-blue-200'
																>
																	wii.hacks.guide/bricks
																</Link>{' '}
																for brick recovery guides
															</li>
														</ul>
													</div>
												</div>
											</DialogContent>
										</Dialog>

										<Button onClick={handleDownloadArchive} disabled={isCreatingArchive} size='sm' variant='outline'>
											<Archive className='mr-1 h-3 w-3' />
											{isCreatingArchive ? 'Creating...' : 'Download ZIP'}
										</Button>
									</div>
								</div>
								<div className='max-h-32 space-y-1 overflow-y-auto'>
									{uploadData.wadsInfos.map((file, index) => (
										<div key={index} className='flex items-center justify-between rounded bg-white p-2 shadow-sm'>
											<span className='font-mono text-xs text-gray-700'>{file.wadname}</span>
											<span className='text-xs text-gray-500'>{file.wadId}</span>
										</div>
									))}
								</div>
							</div>
						)}
					</div>
				)}
			</main>
		</div>
	);
}
